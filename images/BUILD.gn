# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

import("images.gni")

template("nsbox_image") {
  action(target_name) {
    pool = "//:console"

    forward_variables_from(invoker, ["deps"])

    image_root = rebase_path(invoker.image, root_build_dir)

    script = "//utils/nsbox-bender.py"
    outputs = ["$root_out_dir/images/$target_name.tar"]
    args = [
      "--force-color",
      "--export", rebase_path(outputs[0], root_build_dir),
      "--override-nsbox-version", release_version,
      "--override-nsbox-branch", release_branch,
      "--builder", image_builder,
    ]

    if (defined(invoker.tag) && invoker.tag != "") {
      args += ["$image_root:${invoker.tag}"]
    } else {
      args += [image_root]
    }

    sources = [
      "${invoker.image}/metadata.json",
      "${invoker.image}/playbook.yaml",
    ]

    if (defined(invoker.image_files)) {
      foreach(file, invoker.image_files) {
        sources += ["${invoker.image}/$file"]
      }
    }

    if (defined(invoker.local) && invoker.local) {
      sources += ["${invoker.image}/Dockerfile"]
    }
  }
}

foreach(def, image_definitions) {
  versions = []

  if (defined(def.versions)) {
    versions = def.versions
  } else {
    versions = [""]
  }

  foreach(version, versions) {
    target_base = "${def.name}"
    if (version != "") {
      target_base += "-$version"
    }

    nsbox_image("$target_base-image") {
      image = def.name
      if (version != "") {
        tag = version
      }

      image_files = common_image_files

      if (defined(def.local) && def.local) {
        image_files += common_local_image_files
      }

      if (defined(def.extra_image_files)) {
        image_files += def.extra_image_files
      }
    }
  }
}

group("images") {
  deps = []

  foreach(def, image_definitions) {
    if (defined(def.versions)) {
      foreach(version, def.versions) {
        deps += [":${def.name}-$version-image"]
      }
    } else {
      deps += [":${def.name}-image"]
    }
  }
}
